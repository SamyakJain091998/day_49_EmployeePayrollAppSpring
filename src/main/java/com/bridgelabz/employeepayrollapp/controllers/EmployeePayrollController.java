package com.bridgelabz.employeepayrollapp.controllers;

import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.*;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;

import com.bridgelabz.employeepayrollapp.dto.EmployeePayrollDTO;
import com.bridgelabz.employeepayrollapp.dto.ResponseDTO;
import com.bridgelabz.employeepayrollapp.model.EmployeePayrollData;
import com.bridgelabz.employeepayrollapp.model.User;
import com.bridgelabz.employeepayrollapp.repository.UserRepository;
import com.bridgelabz.employeepayrollapp.services.IEmployeePayrollService;

//@Controller // This means that this class is a Controller
//@RequestMapping(path="/demo") // This means URL's start with /demo (after Application path)
//public class EmployeePayrollController {
//  @Autowired // This means to get the bean called userRepository
//         // Which is auto-generated by Spring, we will use it to handle the data
//  private UserRepository userRepository;
//
//  @PostMapping(path="/add") // Map ONLY POST Requests
//  public @ResponseBody String addNewUser (@RequestParam String name
//      , @RequestParam String email) {
//    // @ResponseBody means the returned String is the response, not a view name
//    // @RequestParam means it is a parameter from the GET or POST request
//
//    User n = new User();
//    n.setName(name);
//    n.setEmail(email);
//    userRepository.save(n);
//    return "Saved";
//  }
//
//  @GetMapping(path="/all")
//  public @ResponseBody Iterable<User> getAllUsers() {
//    // This returns a JSON or XML with the users
//    return userRepository.findAll();
//  }
//}

@RestController
@RequestMapping("/employeepayrollservice")
public class EmployeePayrollController {

//	@Autowired
//	private IEmployeePayrollService employeePayrollService;

	@Autowired
	private UserRepository userRepository;

	@PostMapping(path = "/add") // Map ONLY POST Requests

	public @ResponseBody String addNewEmployee(@RequestParam String name, @RequestParam long salary) {
		// @ResponseBody means the returned String is the response, not a view name
		// @RequestParam means it is a parameter from the GET or POST request
		EmployeePayrollData empPayrollData = new EmployeePayrollData();
		empPayrollData.setName(name);
		empPayrollData.setSalary(salary);

//		empData = employeePayrollDTO;
		userRepository.save(empPayrollData);
		return "Saved";
	}

	@GetMapping(path = "/all")
	public @ResponseBody Iterable<EmployeePayrollData> getAllEmployees() {
		// This returns a JSON or XML with the users
		return userRepository.findAll();
	}

//	@RequestMapping(value = { "", "/", "/get" })
//	public ResponseEntity<ResponseDTO> getEmployeePayrollData() {
//		List<EmployeePayrollData> empDataList = null;
//		empDataList = employeePayrollService.getEmployeePayrollData();
//		ResponseDTO respDTO = new ResponseDTO("Get Call Successfull---> ", empDataList);
//		return new ResponseEntity<ResponseDTO>(respDTO, HttpStatus.OK);
//	}
//
//	@GetMapping("/get/{empId}")
//	public ResponseEntity<ResponseDTO> getEmployeePayrollData(@PathVariable("empId") int empId) {
//		EmployeePayrollData empData = null;
//		empData = employeePayrollService.getEmployeePayrollDataById(empId);
//		ResponseDTO respDTO = new ResponseDTO("Get Call Successfull---> ", empData);
//		return new ResponseEntity<ResponseDTO>(respDTO, HttpStatus.OK);
//	}
//
//	@PostMapping("/create")
//	public ResponseEntity<ResponseDTO> addEmployeePayrollData(@RequestBody EmployeePayrollDTO employeePayrollDTO) {
//		EmployeePayrollData empData = null;
//		empData = employeePayrollService.createEmployeePayrollData(employeePayrollDTO);
//		ResponseDTO respDTO = new ResponseDTO("Create Call Successfull---> ", empData);
//		return new ResponseEntity<ResponseDTO>(respDTO, HttpStatus.OK);
//	}
//
//	@PutMapping("/update/{empId}")
//	public ResponseEntity<ResponseDTO> updateEmployeePayrollData(@PathVariable("empId") int empId,
//			@RequestBody EmployeePayrollDTO employeePayrollDTO) {
//		EmployeePayrollData empData = null;
//		empData = employeePayrollService.updateEmployeePayrollData(empId, employeePayrollDTO);
//		ResponseDTO respDTO = new ResponseDTO("Update Call Successfull---> ", empData);
//		return new ResponseEntity<ResponseDTO>(respDTO, HttpStatus.OK);
//	}
//
//	@DeleteMapping("/delete/{empId}")
//	public ResponseEntity<ResponseDTO> deleteEmployeePayrollData(@PathVariable("empId") int empId) {
//		employeePayrollService.deleteEmployeePayrolllData(empId);
//		ResponseDTO respDTO = new ResponseDTO("Delete Call Successfull---> ", "Delete Id: " + empId);
//		return new ResponseEntity<ResponseDTO>(respDTO, HttpStatus.OK);
//	}

}
